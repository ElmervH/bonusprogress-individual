<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Celestine's Bonus Progress</title>
  <style>
    body {
      font-family: 'Rethink Sans', Arial, sans-serif;
      background: url('https://bordercollieblog.nl/wp-content/uploads/2021/06/border-collie-4449956_1280-300x200.jpg') no-repeat center center fixed;
      background-size: cover;
      color: #333333;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
      margin: 0;
    }

    .container {
      width: 90%;
      max-width: 1000px;
      background: white;
      border-radius: 16px;
      padding: 30px;
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
    }

    h1 {
      text-align: center;
      color: #000000;
      font-size: 2.5rem;
      margin-bottom: 20px;
    }

    .progress-bar-container {
      margin: 30px 0;
      background: #f5f5f5;
      border-radius: 30px;
      overflow: hidden;
      height: 40px;
      position: relative;
    }

    .progress-bar {
      height: 100%;
      width: 0%;
      background: linear-gradient(90deg, #FFE5DF, #E3350F);
      transition: width 0.5s;
      position: relative;
    }

    .progress-bar img {
      position: absolute;
      top: 50%;
      right: 0;
      transform: translateY(-50%);
      width: 50px;
      height: auto;
      border-radius: 50%;
    }

    .deal-list {
      margin-bottom: 20px;
    }

    .deal-list-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0.75rem;
      background: #f4f4f9;
      margin-bottom: 0.5rem;
      border: 1px solid #e30613;
      border-radius: 8px;
    }

    .delete-button {
      background: none;
      border: none;
      color: #e30613;
      font-size: 1.2rem;
      cursor: pointer;
    }

    .delete-button:hover {
      color: #ffffff;
    }

    label {
      display: block;
      font-weight: bold;
      margin-bottom: 10px;
    }

    input[type="number"] {
      width: 100%;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 8px;
      margin-bottom: 10px;
      font-size: 1rem;
    }

    button {
      display: inline-block;
      background-color: #e30613;
      color: #fff;
      padding: 10px 20px;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      font-size: 1rem;
      position: relative;
      overflow: hidden;
    }

    button:hover {
      background-color: #ff0000;
    }

    .confetti {
      position: absolute;
      width: 10px;
      height: 10px;
      background-color: #e30613;
      animation: explode 1s linear;
      pointer-events: none;
    }

    @keyframes explode {
      0% {
        transform: translate(0, 0) scale(1);
        opacity: 1;
      }
      100% {
        transform: translate(var(--x), var(--y)) scale(0.5);
        opacity: 0;
      }
    }

    .summary {
      margin-top: 20px;
      font-size: 1.2rem;
      color: #000;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Celestine's Bonus Progress</h1>
    <div class="progress-bar-container">
      <div class="progress-bar" id="progress-bar">
        <img src="https://media.licdn.com/dms/image/v2/D4E03AQG_nkgYQS81Dw/profile-displayphoto-shrink_800_800/profile-displayphoto-shrink_800_800/0/1666800722730?e=1740009600&v=beta&t=e0L0X011OU9ZqNFvQPQIWcScpkADxOqShbf1t-et3Ts" alt="Celestine">
      </div>
    </div>

    <div class="deal-list" id="deal-list">
      <h3>Saved Deals</h3>
    </div>

    <label for="deal-value">Totale waarde van deal (€)</label>
    <input type="number" id="deal-value" placeholder="Voer de totale waarde van de deal in" />
    <button id="save-button">Opslaan</button>

    <div class="summary" id="summary">
      <p>Individuele Bonus: €0</p>
      <p>TinQwise Savings: €0</p>
    </div>
  </div>

  <script>
    const progressBar = document.getElementById('progress-bar');
    const summary = document.getElementById('summary');
    const quarterlyTarget = 3092 * 3 * 6; // Celestine's target
    const salaryQuarterly = 3092 * 3; // Quarterly salary

    const thresholds = [
      { min: 0.75, max: 0.9999, percentage: 0.08 },
      { min: 1, max: 1.1499, percentage: 0.2 },
      { min: 1.15, max: 1.2999, percentage: 0.5 },
      { min: 1.3, max: 1.4499, percentage: 0.75 },
      { min: 1.45, max: Infinity, percentage: 1 },
    ];

    function loadDeals() {
      const deals = JSON.parse(localStorage.getItem("deals")) || [];
      const dealList = document.getElementById("deal-list");
      dealList.innerHTML = "";
      deals.forEach((deal, index) => {
        const dealItem = document.createElement("div");
        dealItem.className = "deal-list-item";

        const dealText = document.createElement("span");
        dealText.textContent = `Deal ${index + 1}: €${deal}`;

        const deleteButton = document.createElement("button");
        deleteButton.className = "delete-button";
        deleteButton.textContent = "✖";
        deleteButton.addEventListener("click", () => deleteDeal(index));

        dealItem.appendChild(dealText);
        dealItem.appendChild(deleteButton);
        dealList.appendChild(dealItem);
      });
      calculateBonus(deals);
    }

    function saveDeal() {
      const dealValue = parseFloat(document.getElementById("deal-value").value);
      if (!dealValue) return;

      const deals = JSON.parse(localStorage.getItem("deals")) || [];
      deals.push(dealValue);
      localStorage.setItem("deals", JSON.stringify(deals));
      loadDeals();
      showConfetti();
    }

    function deleteDeal(index) {
      const deals = JSON.parse(localStorage.getItem("deals")) || [];
      deals.splice(index, 1);
      localStorage.setItem("deals", JSON.stringify(deals));
      loadDeals();
    }

    function calculateBonus(deals) {
      const totalDeals = deals.reduce((acc, value) => acc + value, 0);
      const performance = totalDeals / quarterlyTarget;
      const percentage = Math.min(performance * 100, 145).toFixed(2);

      let bonus = 0;
      let savings = 0;

      if (performance >= 0.75) {
        const threshold = thresholds.find(
          (t) => performance >= t.min && performance < t.max
        );
        if (threshold) {
          const totalBonus = salaryQuarterly * threshold.percentage;
          savings = totalBonus * 0.2;
          bonus = totalBonus - savings;
        }
      }

      progressBar.style.width = `${percentage}%`;
      summary.innerHTML = `<p>Individuele Bonus: €${bonus.toFixed(2)}</p><p>TinQwise Savings: €${savings.toFixed(2)}</p>`;
    }

    function showConfetti() {
      const button = document.getElementById("save-button");
      for (let i = 0; i < 30; i++) {
        const confetti = document.createElement("div");
        confetti.className = "confetti";
        confetti.style.setProperty("--x", `${Math.random() * 200 - 100}px`);
        confetti.style.setProperty("--y", `${Math.random() * -200}px`);
        confetti.style.backgroundColor = ["#e30613", "#fff", "#000"][Math.floor(Math.random() * 3)];
        button.appendChild(confetti);
        setTimeout(() => confetti.remove(), 1000);
      }
    }

    document.getElementById("save-button").addEventListener("click", saveDeal);

    loadDeals();
  </script>
</body>
</html>
